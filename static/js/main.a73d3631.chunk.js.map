{"version":3,"sources":["routes.jsx","service/privateRoute.jsx","service/publicRoute.jsx","redux/auth/selector.jsx","components/logo/logo.jsx","components/navigation/nav.jsx","components/userMenu/userMenu.jsx","components/app/appBar.jsx","components/APP.jsx","components/appContainer.jsx","redux/contacts/reducer.jsx","redux/auth/reducers.jsx","redux/store.jsx","index.js","redux/contacts/actionOperetion.jsx","components/navigation/nav.module.css","components/userMenu/userMenu.module.css","redux/auth/action.jsx","components/logo/logo.module.css","redux/auth/actionOperations.jsx","redux/contacts/selectors.jsx"],"names":["path","label","exact","component","lazy","private","restricted","PrivateRoute","Component","routeProps","isAuthenticated","useSelector","state","auth","token","render","props","to","selector","usersName","user","name","loading","error","logoStyles","appear","styles","appearActive","Logo","CSSTransition","in","timeout","classNames","unmountOnExit","className","logo","Nav","nav","NavigationLink","navLink","activeClassName","NavigationLinkActive","connect","onLogout","action","logoutUser","avatar","userMenu","container","src","alt","width","Button","btn","variant","color","type","onClick","APP","fallback","routes","map","route","APPContainer","this","currentUser","isloadingContacts","selectors","getLoading","dispatch","getCurrentUser","arrayItems","createReducer","actionOperation","fetchContactSuccess","_","payload","addContactSuccess","removeContactSuccess","filter","contact","id","changeFilter","addContactRequest","addContactError","fetchContactRequest","fetchContactError","removeContactRequest","removeContactError","combineReducers","initialUserState","email","actionOperations","registerSuccess","loginSuccess","getCurrentSuccess","logoutSuccess","registerError","loginError","logoutError","getCurrentError","authConf","key","storage","whitelist","store","configureStore","reducer","contacts","reducers","persistReducer","reducersAuth","middleware","thunk","persistor","persistStore","ReactDOM","document","getElementById","exp","createAction","deleteContact","module","exports","axios","defaults","baseURL","headers","common","Authorization","registrationUser","credential","registerRequest","post","then","response","data","catch","authorizationUser","loginRequest","getState","persistToken","getCurrentRequest","get","logoutRequest","getContacts","getFilter","selectContacts","createSelector","toLowerCase","includes"],"mappings":"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","file":"static/js/main.a73d3631.chunk.js","sourcesContent":["import { lazy } from 'react';\r\n\r\nexport default [\r\n  {\r\n    path: '/login',\r\n    label: 'Login',\r\n    exact: true,\r\n    component: lazy(() => import('./components/login/login')),\r\n    private: false,\r\n    restricted: true,\r\n  },\r\n  {\r\n    path: '/register',\r\n    label: 'Register',\r\n    exact: true,\r\n    component: lazy(() => import('./components/registration/register')),\r\n    private: false,\r\n    restricted: true,\r\n  },\r\n  {\r\n    path: '/contacts',\r\n    label: 'Contacts',\r\n    exact: true,\r\n    component: lazy(() => import('./components/contactRender/contactRender')),\r\n    private: true,\r\n    restricted: false,\r\n  },\r\n];","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst PrivateRoute = ({ component: Component, ...routeProps }) => {\r\n  const isAuthenticated = useSelector(state => state.auth.token);\r\n  return (\r\n    <Route\r\n      {...routeProps}\r\n      render={props =>\r\n        isAuthenticated ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst PrivateRoute = ({ component: Component, restricted, ...routeProps }) => {\r\n  const isAuthenticated = useSelector(state => state.auth.token);\r\n  return (\r\n    <Route\r\n      {...routeProps}\r\n      render={props =>\r\n        isAuthenticated && restricted ? (\r\n          <Redirect to=\"/contacts\" />\r\n        ) : (\r\n          <Component {...props} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","const isAuthenticated = state => state.auth.token;\r\nconst usersName = state => state.auth.user.name;\r\nconst loading = state => state.auth.loading;\r\nconst error = state => state.auth.error;\r\n\r\nconst selector = {\r\n    isAuthenticated,\r\n    usersName, \r\n    loading, \r\n    error\r\n};\r\n\r\nexport default selector;","import React from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport styles from './logo.module.css';\r\n\r\nconst logoStyles = {\r\n  appear: styles.appear,\r\n  appearActive: styles.appearActive,\r\n};\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <CSSTransition\r\n      in={true}\r\n      appear={true}\r\n      timeout={500}\r\n      classNames={logoStyles}\r\n      unmountOnExit\r\n    >\r\n      <h1 className={styles.logo}>Phonebook</h1>\r\n    </CSSTransition>\r\n  );\r\n};\r\nexport default Logo;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styles from './nav.module.css';\r\n\r\nconst Nav = () => {\r\n    return (\r\n      <nav className={styles.nav}>\r\n        <NavLink\r\n          exact\r\n          to=\"/login\"\r\n          className={styles.NavigationLink + ' ' + styles.navLink}\r\n          activeClassName={styles.NavigationLinkActive}\r\n        >\r\n          Login\r\n        </NavLink>\r\n        <br />\r\n        <NavLink\r\n          to=\"/register\"\r\n          className={styles.NavigationLink + ' ' + styles.navLink}\r\n          activeClassName={styles.NavigationLinkActive}\r\n        >\r\n          Register\r\n        </NavLink>\r\n      </nav>\r\n    );\r\n  };\r\n  \r\n  export default Nav;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport action from '../../redux/auth/action';\r\nimport selector from '../../redux/auth/selector';\r\nimport { Button } from '@material-ui/core';\r\nimport styles from './userMenu.module.css';\r\n\r\nconst UserMenu = ({ avatar, name, onLogout }) => (\r\n    <div className={styles.userMenu}>\r\n    <div className={styles.container}>\r\n      <img src={avatar} alt=\"\" width=\"32\" className={styles.avatar} />\r\n      <span className={styles.name}>{name}</span>\r\n      <Button\r\n      className={styles.btn}\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        type=\"button\"\r\n        onClick={onLogout}\r\n      >\r\n        Logout\r\n      </Button>\r\n    </div>\r\n    </div>\r\n  );\r\n\r\nconst mapStateToProps = state => ({\r\n    name: selector.usersName(state),\r\n    // avatar: 'http://img1.joyreactor.cc/pics/comment/coub-shark-3016959.jpeg',\r\n    \r\n});\r\n  \r\nexport default connect(mapStateToProps, { onLogout: action.logoutUser })(\r\n    UserMenu,\r\n);\r\n  ","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport selector from '../../redux/auth/selector';\r\nimport Logo from '../logo/logo';\r\nimport Navigation from '../navigation/nav';\r\nimport UserMenu from '../userMenu/userMenu';\r\n\r\nconst AppBar = ({ isAuthenticated}) => {\r\n  return (\r\n    <header>\r\n      <Logo />\r\n      {isAuthenticated ? <UserMenu /> : <Navigation />}\r\n    </header>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: selector.isAuthenticated(state)\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps)(AppBar);\r\n","import React, {Suspense} from 'react';\r\nimport { BrowserRouter, Switch, Redirect } from 'react-router-dom';\r\nimport routes from '../routes';\r\nimport PrivateRoute from '../service/privateRoute';\r\nimport PublicRoute from '../service/publicRoute';\r\nimport AppBar from '../components/app/appBar';\r\nimport  './app/app.module.css';\r\n\r\n\r\nconst APP = () =>{\r\n    return (\r\n        <BrowserRouter>\r\n          <AppBar />\r\n          <Suspense fallback={<h1>Loading...</h1>}>\r\n            <Switch>\r\n              {routes.map(route => {\r\n                return route.private ? (\r\n                  <PrivateRoute key={route.label} {...route} />\r\n                ) : (\r\n                  <PublicRoute\r\n                    key={route.label}\r\n                    {...route}\r\n                    restricted={route.restricted}\r\n                  />\r\n                );\r\n              })}\r\n              <Redirect to=\"/login\" />\r\n            </Switch>\r\n          </Suspense>\r\n      </BrowserRouter>\r\n    );\r\n};\r\n\r\nexport default APP;\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport selectors from '../redux/contacts/selectors';\r\nimport action from '../redux/auth/action';\r\nimport APP from './APP';\r\n\r\nclass APPContainer extends Component {\r\n    componentDidMount() {\r\n        this.props.currentUser();\r\n    }\r\n    render() {\r\n        return <APP {...this.props} />;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isloadingContacts: selectors.getLoading(state),\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    currentUser: () => dispatch(action.getCurrentUser()),\r\n});\r\n    \r\nexport default connect(mapStateToProps, mapDispatchToProps)(APPContainer);\r\n\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\nimport actionOperation from './actionOperetion';\r\n\r\nconst addContactMore = (state, action) => {\r\n        return [...state, action.payload];\r\n};\r\nconst deleteOnContact = (state, action) => state.filter(contact => contact.id !== action.payload);\r\nconst changeOnFilter = (_, action) => action.payload;\r\nconst arrayItems = createReducer([], {\r\n    [actionOperation.fetchContactSuccess]: (_, action) => action.payload,\r\n    [actionOperation.addContactSuccess]: addContactMore,\r\n    [actionOperation.removeContactSuccess]: deleteOnContact,\r\n});\r\nconst filter = createReducer('', {\r\n    [actionOperation.changeFilter]: changeOnFilter,\r\n});\r\n\r\n\r\nconst loading = createReducer(false, {\r\n    [actionOperation.addContactRequest]: () => true,\r\n    [actionOperation.addContactSuccess]: () => false,\r\n    [actionOperation.addContactError]: () => false,\r\n    [actionOperation.fetchContactRequest]: () => true,\r\n    [actionOperation.fetchContactSuccess]: () => false,\r\n    [actionOperation.fetchContactError]: () => false,\r\n    [actionOperation.removeContactRequest]: () => true,\r\n    [actionOperation.removeContactSuccess]: () => false,\r\n    [actionOperation.removeContactError]: () => false,\r\n  });\r\n\r\n\r\nexport default combineReducers({\r\n    arrayItems,\r\n    loading,\r\n    filter,\r\n});","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport actionOperations from './actionOperations';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n    [actionOperations.registerSuccess]: (_, {payload}) => payload.user,\r\n    [actionOperations.loginSuccess]: (_, {payload}) => payload.user,\r\n    [actionOperations.getCurrentSuccess]: (_, {payload}) => payload,\r\n    [actionOperations.logoutSuccess]: () => initialUserState,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n    [actionOperations.registerSuccess]: (_, { payload }) => payload.token,\r\n    [actionOperations.loginSuccess]: (_, { payload }) => payload.token,\r\n    [actionOperations.logoutSuccess]: () => null,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n    [actionOperations.registerError]: (_, {payload}) => payload,\r\n    [actionOperations.loginError]: (_, {payload}) => payload,\r\n    [actionOperations.logoutError]: (_, {payload}) => payload,\r\n    [actionOperations.getCurrentError]: (_, {payload}) => payload,\r\n});\r\n\r\nexport default combineReducers({user, token, error,});","import { configureStore } from '@reduxjs/toolkit';\r\nimport thunk from 'redux-thunk';\r\nimport reducers from './contacts/reducer';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport reducersAuth from './auth/reducers';\r\n\r\n\r\nconst authConf = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: reducers,\r\n    auth: persistReducer(authConf, reducersAuth),\r\n  },\r\n  middleware: [thunk],\r\n});\r\n\r\nexport const persistor = persistStore(store);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport APP from './components/appContainer';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport {store, persistor} from './redux/store';\r\n\r\nReactDOM.render(\r\n<Provider store={store}>\r\n    <PersistGate persistor={persistor}>\r\n        <APP/>\r\n    </PersistGate>\r\n</Provider>,\r\n    document.getElementById('root'),);","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst fetchContactRequest = createAction('contacts/fetchRequest');\r\nconst fetchContactSuccess = createAction('contacts/fetchSuccess');\r\nconst fetchContactError = createAction('contacts/fetchError');\r\n\r\nconst addContactRequest = createAction('contacts/addRequest');\r\nconst addContactSuccess = createAction('contacts/addSuccess');\r\nconst addContactError = createAction('contacts/addError');\r\n\r\nconst removeContactRequest = createAction('contacts/removeRequest');\r\nconst removeContactSuccess = createAction('contacts/removeSuccess');\r\nconst removeContactError = createAction('contacts/removeError');\r\n\r\nconst deleteContact = createAction('contacts/remove');\r\n\r\nconst changeFilter = createAction('contscts/changeFilter');\r\n\r\n\r\nconst exp = {\r\n    fetchContactRequest,\r\n    fetchContactSuccess,\r\n    fetchContactError,\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    addContactError,\r\n    removeContactRequest,\r\n    removeContactSuccess,\r\n    removeContactError,\r\n    deleteContact, \r\n    changeFilter,\r\n};\r\n\r\nexport default exp;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"nav_nav__2svnm\",\"NavigationLink\":\"nav_NavigationLink__2zxsp\",\"navLink\":\"nav_navLink__1NnPE\",\"NavigationLinkActive\":\"nav_NavigationLinkActive__RdAm7\",\"AddInfoLink\":\"nav_AddInfoLink__fIuWc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userMenu\":\"userMenu_userMenu__35V5E\",\"container\":\"userMenu_container__3Zyo2\",\"avatar\":\"userMenu_avatar__2Dsp0\",\"name\":\"userMenu_name__2L9rG\",\"btn\":\"userMenu_btn__2GtqO\"};","import axios from 'axios';\r\nimport actionOperations from './actionOperations';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\n\r\nconst token = {\r\n    set(token){\r\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n    },\r\n    unset(){\r\n        axios.defaults.headers.common.Authorization = '';\r\n    },\r\n};\r\n\r\nconst registrationUser = credential => dispatch => {\r\n    dispatch(actionOperations.registerRequest());\r\n    axios\r\n        .post('users/signup', credential)\r\n        .then(response => {\r\n            token.set(response.data.token);\r\n            dispatch(actionOperations.registerSuccess(response.data));\r\n        })\r\n        .catch(error => dispatch(actionOperations.registerError(error)));\r\n};\r\n\r\nconst authorizationUser = credential => dispatch => {\r\n    dispatch(actionOperations.loginRequest());\r\n    axios\r\n        .post('users/login', credential)\r\n        .then(response => {\r\n            token.set(response.data.token);\r\n            dispatch(actionOperations.loginSuccess(response.data));\r\n        })\r\n        .catch(error => dispatch(actionOperations.loginError(error)));\r\n};\r\n\r\nconst getCurrentUser = () => (dispatch, getState) => {\r\n    const {auth: {token: persistToken},\r\n    } = getState();\r\n    if (!persistToken) {\r\n        return;\r\n    }\r\n    token.set(persistToken);\r\n    dispatch(actionOperations.getCurrentRequest());\r\n    axios\r\n        .get('users/current')\r\n        .then(({data}) => dispatch(actionOperations.getCurrentSuccess(data)))\r\n        .catch(error => actionOperations.getCurrentError(error));\r\n};\r\n\r\nconst logoutUser = () => dispatch => {\r\n    dispatch(actionOperations.logoutRequest());\r\n    axios\r\n        .post('users/logout')\r\n        .then(() => {\r\n            token.unset();\r\n            dispatch(actionOperations.logoutSuccess());\r\n        })\r\n        .catch(error => dispatch(actionOperations.logoutError(error)));\r\n};\r\n\r\nconst action = {\r\n    registrationUser,\r\n    authorizationUser,\r\n    getCurrentUser,\r\n    logoutUser,\r\n};\r\n\r\nexport default action;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"logo_logo__j2gMh\",\"appear\":\"logo_appear__3CWM9\",\"appearActive\":\"logo_appearActive__1w1zy\"};","import {createAction} from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction ('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentRequest = createAction('auth/getCurrentRequest');\r\nconst getCurrentSuccess = createAction('auth/getCurrentSuccess');\r\nconst getCurrentError = createAction('auth/getCurrentError');\r\n\r\nconst actionOperation = {\r\n    registerRequest,\r\n    registerSuccess,\r\n    registerError,\r\n    loginRequest,\r\n    loginSuccess,\r\n    loginError,\r\n    logoutRequest,\r\n    logoutSuccess,\r\n    logoutError,\r\n    getCurrentRequest,\r\n    getCurrentSuccess,\r\n    getCurrentError\r\n};\r\n\r\n\r\nexport default actionOperation;","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getContacts = state => state.contacts.arrayItems;\r\nconst getFilter = state => state.contacts.filter;\r\nconst getLoading = state => state.contacts.loading;\r\n\r\nconst selectContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    return contacts && contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  },\r\n);\r\n\r\nconst selectors = {\r\n  selectContacts,\r\n  getContacts,\r\n  getFilter,\r\n  getLoading,\r\n};\r\n\r\nexport default selectors;"],"sourceRoot":""}