{"version":3,"sources":["redux/contacts/actionOperetion.jsx","router.jsx","service/privateRoute.jsx","service/publicRoute.jsx","redux/auth/selector.jsx","components/logo/logo.jsx","components/navigation/nav.jsx","components/userMenu/userMenu.jsx","components/app/appBar.jsx","components/APP.jsx","components/appContainer.jsx","redux/contacts/reducer.jsx","redux/auth/reducers.jsx","redux/store.jsx","index.js","components/navigation/nav.module.css","components/userMenu/userMenu.module.css","redux/auth/actionOperations.jsx","redux/auth/action.jsx","components/logo/logo.module.css","redux/contacts/selectors.jsx"],"names":["exp","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","removeContactRequest","removeContactSuccess","removeContactError","deleteContact","changeFilter","path","label","exact","component","lazy","private","restricted","PrivateRoute","Component","routeProps","isAuthenticated","useSelector","state","auth","token","render","props","to","user","name","logoStyles","appear","styles","appearActive","Logo","CSSTransition","in","timeout","classNames","unmountOnExit","className","logo","Nav","nav","NavigationLink","navLink","activeClassName","NavigationLinkActive","connect","selector","avatar","onLogout","action","logoutUser","userMenu","container","src","alt","width","Button","btn","variant","color","type","onClick","APP","fallback","routes","map","route","key","APPContainer","this","currentUser","isloadingContacts","selectors","getLoading","dispatch","getCurrentUser","arrayItems","createReducer","actionOperation","_","payload","filter","contact","id","loading","combineReducers","initialUserState","email","actionOperations","registerSuccess","loginSuccess","getCurrentSuccess","logoutSuccess","error","registerError","loginError","logoutError","getCurrentError","authConf","storage","whitelist","store","configureStore","reducer","contacts","reducers","persistReducer","reducersAuth","middleware","thunk","persistor","persistStore","ReactDOM","document","getElementById","module","exports","registerRequest","loginRequest","logoutRequest","getCurrentRequest","axios","defaults","baseURL","headers","common","Authorization","registrationUser","credential","post","then","response","data","regasterSuccess","catch","regasterError","authorizationUser","getState","persistToken","get","getContacts","getFilter","selectContacts","createSelector","toLowerCase","includes"],"mappings":"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","file":"static/js/main.73291255.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst fetchContactRequest = createAction('contacts/fetchRequest');\r\nconst fetchContactSuccess = createAction('contacts/fetchSuccess');\r\nconst fetchContactError = createAction('contacts/fetchError');\r\n\r\nconst addContactRequest = createAction('contacts/addRequest');\r\nconst addContactSuccess = createAction('contacts/addSuccess');\r\nconst addContactError = createAction('contacts/addError');\r\n\r\nconst removeContactRequest = createAction('contacts/removeRequest');\r\nconst removeContactSuccess = createAction('contacts/removeSuccess');\r\nconst removeContactError = createAction('contacts/removeError');\r\n\r\nconst deleteContact = createAction('contacts/remove');\r\n\r\nconst changeFilter = createAction('contscts/changeFilter');\r\n\r\n\r\nconst exp = {\r\n    fetchContactRequest,\r\n    fetchContactSuccess,\r\n    fetchContactError,\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    addContactError,\r\n    removeContactRequest,\r\n    removeContactSuccess,\r\n    removeContactError,\r\n    deleteContact, \r\n    changeFilter,\r\n};\r\n\r\nexport default exp;","import { lazy } from 'react';\r\n\r\nexport default [\r\n  {\r\n    path: '/login',\r\n    label: 'Login',\r\n    exact: true,\r\n    component: lazy(() => import('./components/login/login')),\r\n    private: false,\r\n    restricted: true,\r\n  },\r\n  {\r\n    path: '/register',\r\n    label: 'Register',\r\n    exact: true,\r\n    component: lazy(() => import('./components/registration/register')),\r\n    private: false,\r\n    restricted: true,\r\n  },\r\n  {\r\n    path: '/contacts',\r\n    label: 'Contacts',\r\n    exact: true,\r\n    component: lazy(() => import('./components/contactRender/contactRender')),\r\n    private: true,\r\n    restricted: false,\r\n  },\r\n];","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst PrivateRoute = ({ component: Component, ...routeProps }) => {\r\n  const isAuthenticated = useSelector(state => state.auth.token);\r\n  return (\r\n    <Route\r\n      {...routeProps}\r\n      render={props =>\r\n        isAuthenticated ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst PrivateRoute = ({ component: Component, restricted, ...routeProps }) => {\r\n  const isAuthenticated = useSelector(state => state.auth.token);\r\n  return (\r\n    <Route\r\n      {...routeProps}\r\n      render={props =>\r\n        isAuthenticated && restricted ? (\r\n          <Redirect to=\"/contacts\" />\r\n        ) : (\r\n          <Component {...props} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","const isAuthenticated = state => state.auth.token;\r\nconst usersName = state => state.auth.user.name;\r\nconst loading = state => state.auth.loading;\r\nconst error = state => state.auth.error;\r\n\r\nexport default {isAuthenticated, usersName, loading, error};","import React from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport styles from './logo.module.css';\r\n\r\nconst logoStyles = {\r\n  appear: styles.appear,\r\n  appearActive: styles.appearActive,\r\n};\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <CSSTransition\r\n      in={true}\r\n      appear={true}\r\n      timeout={500}\r\n      classNames={logoStyles}\r\n      unmountOnExit\r\n    >\r\n      <h1 className={styles.logo}>Phonebook</h1>\r\n    </CSSTransition>\r\n  );\r\n};\r\nexport default Logo;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styles from './nav.module.css';\r\n\r\nconst Nav = () => {\r\n    return (\r\n      <nav className={styles.nav}>\r\n        <NavLink\r\n          exact\r\n          to=\"/login\"\r\n          className={styles.NavigationLink + ' ' + styles.navLink}\r\n          activeClassName={styles.NavigationLinkActive}\r\n        >\r\n          Login\r\n        </NavLink>\r\n        <br />\r\n        <NavLink\r\n          to=\"/register\"\r\n          className={styles.NavigationLink + ' ' + styles.navLink}\r\n          activeClassName={styles.NavigationLinkActive}\r\n        >\r\n          Register\r\n        </NavLink>\r\n      </nav>\r\n    );\r\n  };\r\n  \r\n  export default Nav;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport action from '../../redux/auth/action';\r\nimport selector from '../../redux/auth/selector';\r\nimport { Button } from '@material-ui/core';\r\nimport styles from './userMenu.module.css';\r\n\r\nconst UserMenu = ({ avatar, name, onLogout }) => (\r\n    <div className={styles.userMenu}>\r\n    <div className={styles.container}>\r\n      <img src={avatar} alt=\"\" width=\"32\" className={styles.avatar} />\r\n      <span className={styles.name}> {name}</span>\r\n      <Button\r\n      className={styles.btn}\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        type=\"button\"\r\n        onClick={onLogout}\r\n      >\r\n        Logout\r\n      </Button>\r\n    </div>\r\n    </div>\r\n  );\r\n\r\nconst mapStateToProps = state => ({\r\n    name: selector.usersName(state),\r\n    avatar: 'http://img1.joyreactor.cc/pics/comment/coub-shark-3016959.jpeg',\r\n});\r\n  \r\nexport default connect(mapStateToProps, { onLogout: action.logoutUser })(\r\n    UserMenu,\r\n);\r\n  ","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport selector from '../../redux/auth/selector';\r\nimport Logo from '../logo/logo';\r\nimport Navigation from '../navigation/nav';\r\nimport UserMenu from '../userMenu/userMenu';\r\n\r\nconst AppBar = ({ isAuthenticated}) => {\r\n  return (\r\n    <header>\r\n      <Logo />\r\n      {isAuthenticated ? <UserMenu /> : <Navigation />}\r\n    </header>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: selector.isAuthenticated(state)\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps)(AppBar);\r\n","import React, {Suspense} from 'react';\r\nimport { BrowserRouter, Switch, Redirect } from 'react-router-dom';\r\nimport routes from '../router';\r\nimport PrivateRoute from '../service/privateRoute';\r\nimport PublicRoute from '../service/publicRoute';\r\nimport AppBar from '../components/app/appBar'\r\nimport  './app/app.module.css';\r\n\r\n\r\nconst APP = () =>{\r\n    return (\r\n        <BrowserRouter>\r\n        <div>\r\n          <AppBar />\r\n          <Suspense fallback={<h1></h1>}>\r\n            <Switch>\r\n              {routes.map(route => {\r\n                return route.private ? (\r\n                  <PrivateRoute key={route.label} {...route} />\r\n                ) : (\r\n                  <PublicRoute\r\n                    key={route.label}\r\n                    {...route}\r\n                    restricted={route.restricted}\r\n                  />\r\n                );\r\n              })}\r\n              <Redirect to=\"/login\" />\r\n            </Switch>\r\n          </Suspense>\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n};\r\n\r\nexport default APP;\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport selectors from '../redux/contacts/selectors';\r\nimport action from '../redux/auth/action';\r\nimport APP from './APP';\r\n\r\nclass APPContainer extends Component {\r\n    componentDidMount() {\r\n        this.props.currentUser();\r\n    }\r\n    render() {\r\n        return <APP {...this.props} />;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isloadingContacts: selectors.getLoading(state),\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    currentUser: () => dispatch(action.getCurrentUser()),\r\n});\r\n    \r\nexport default connect(mapStateToProps, mapDispatchToProps)(APPContainer);\r\n\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\nimport actionOperation from './actionOperetion';\r\n\r\nconst addContactMore = (state, action) => {\r\n        return [...state, action.payload];\r\n};\r\nconst deleteOnContact = (state, action) => state.filter(contact => contact.id !== action.payload);\r\nconst changeOnFilter = (_, action) => action.payload;\r\nconst arrayItems = createReducer([], {\r\n    [actionOperation.fetchContactSuccess]: (_, action) => action.payload,\r\n    [actionOperation.addContactSuccess]: addContactMore,\r\n    [actionOperation.removeContactSuccess]: deleteOnContact,\r\n});\r\nconst filter = createReducer('', {\r\n    [actionOperation.changeFilter]: changeOnFilter,\r\n});\r\n\r\n\r\nconst loading = createReducer(false, {\r\n    [actionOperation.addContactRequest]: () => true,\r\n    [actionOperation.addContactSuccess]: () => false,\r\n    [actionOperation.addContactError]: () => false,\r\n    [actionOperation.fetchContactRequest]: () => true,\r\n    [actionOperation.fetchContactSuccess]: () => false,\r\n    [actionOperation.fetchContactError]: () => false,\r\n    [actionOperation.removeContactRequest]: () => true,\r\n    [actionOperation.removeContactSuccess]: () => false,\r\n    [actionOperation.removeContactError]: () => false,\r\n  });\r\n\r\n\r\nexport default combineReducers({\r\n    arrayItems,\r\n    loading,\r\n    filter,\r\n});","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport actionOperations from './actionOperations';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n    [actionOperations.registerSuccess]: (_, {payload}) => payload.user,\r\n    [actionOperations.loginSuccess]: (_, {payload}) => payload.user,\r\n    [actionOperations.getCurrentSuccess]: (_, {payload}) => payload,\r\n    [actionOperations.logoutSuccess]: () => initialUserState,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n    [actionOperations.registerSuccess]: (_, { payload }) => payload.token,\r\n    [actionOperations.loginSuccess]: (_, { payload }) => payload.token,\r\n    [actionOperations.logoutSuccess]: () => null,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n    [actionOperations.registerError]: (_, {payload}) => payload,\r\n    [actionOperations.loginError]: (_, {payload}) => payload,\r\n    [actionOperations.logoutError]: (_, {payload}) => payload,\r\n    [actionOperations.getCurrentError]: (_, {payload}) => payload,\r\n});\r\n\r\nexport default combineReducers({user, token, error,});","import { configureStore } from '@reduxjs/toolkit';\r\nimport thunk from 'redux-thunk';\r\nimport reducers from './contacts/reducer';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport reducersAuth from './auth/reducers';\r\n\r\n\r\nconst authConf = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: reducers,\r\n    auth: persistReducer(authConf, reducersAuth),\r\n  },\r\n  middleware: [thunk],\r\n});\r\n\r\nexport const persistor = persistStore(store);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport APP from './components/appContainer';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport {store, persistor} from './redux/store';\r\n\r\nReactDOM.render(\r\n<Provider store={store}>\r\n    <PersistGate  persistor={persistor}>\r\n        <APP/>\r\n    </PersistGate>\r\n</Provider>,\r\n    document.getElementById('root'),);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"nav_nav__2svnm\",\"NavigationLink\":\"nav_NavigationLink__2zxsp\",\"navLink\":\"nav_navLink__1NnPE\",\"NavigationLinkActive\":\"nav_NavigationLinkActive__RdAm7\",\"AddInfoLink\":\"nav_AddInfoLink__fIuWc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userMenu\":\"userMenu_userMenu__35V5E\",\"container\":\"userMenu_container__3Zyo2\",\"avatar\":\"userMenu_avatar__2Dsp0\",\"name\":\"userMenu_name__2L9rG\",\"btn\":\"userMenu_btn__2GtqO\"};","import {createAction} from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction ('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentRequest = createAction('auth/getCurrentRequest');\r\nconst getCurrentSuccess = createAction('auth/getCurrentSuccess');\r\nconst getCurrentError = createAction('auth/getCurrentError');\r\n\r\n// const authAction = \r\nexport default  {\r\n    registerRequest,\r\n    registerSuccess,\r\n    registerError,\r\n    loginRequest,\r\n    loginSuccess,\r\n    loginError,\r\n    logoutRequest,\r\n    logoutSuccess,\r\n    logoutError,\r\n    getCurrentRequest,\r\n    getCurrentSuccess,\r\n    getCurrentError\r\n};\r\n\r\n// export default authAction;","import axios from 'axios';\r\nimport actionOperations from './actionOperations';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com/';\r\n\r\nconst token = {\r\n    set(token){\r\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n    },\r\n    unset(){\r\n        axios.defaults.headers.common.Authorization = '';\r\n    },\r\n};\r\n\r\nconst registrationUser = credential => dispatch => {\r\n    dispatch(actionOperations.registerRequest());\r\n    axios\r\n        .post('/users/signup', credential)\r\n        .then(response => {\r\n            token.set(response.data.token);\r\n            dispatch(actionOperations.regasterSuccess(response.data));\r\n        })\r\n        .catch(error => dispatch(actionOperations.regasterError(error)));\r\n};\r\n\r\nconst authorizationUser = credential => dispatch => {\r\n    dispatch(actionOperations.loginRequest());\r\n    axios\r\n        .post('/users/logIn', credential)\r\n        .then(response => {\r\n            token.set(response.data.token);\r\n            dispatch(actionOperations.loginSuccess(response.data));\r\n        })\r\n        .catch(error => dispatch(actionOperations.loginError(error)));\r\n};\r\n\r\nconst getCurrentUser = () => (dispatch, getState) => {\r\n    const {auth: {token: persistToken},\r\n    } = getState();\r\n    if (!persistToken) {\r\n        return;\r\n    }\r\n    token.set(persistToken);\r\n    dispatch(actionOperations.getCurrentRequest());\r\n    axios\r\n        .get('/users/current')\r\n        .then(({data}) => dispatch(actionOperations.getCurrentSuccess(data)))\r\n        .catch(error => actionOperations.getCurrentError(error));\r\n};\r\n\r\nconst logoutUser = () => dispatch => {\r\n    dispatch(actionOperations.logoutRequest());\r\n    axios\r\n        .post('/users/logout')\r\n        .then(() => {\r\n            token.unset();\r\n            dispatch(actionOperations.logoutSuccess());\r\n        })\r\n        .catch(error => dispatch(actionOperations.logoutError(error)));\r\n};\r\n\r\n// const authOperation =\r\nexport default {\r\n    registrationUser,\r\n    authorizationUser,\r\n    getCurrentUser,\r\n    logoutUser,\r\n};\r\n\r\n// export default authOperation;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"logo_logo__j2gMh\",\"appear\":\"logo_appear__3CWM9\",\"appearActive\":\"logo_appearActive__1w1zy\"};","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getContacts = state => state.contacts.arrayItems;\r\nconst getFilter = state => state.contacts.filter;\r\nconst getLoading = state => state.contacts.loading;\r\n\r\nconst selectContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    return contacts && contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  },\r\n);\r\n\r\nconst selectors = {\r\n  selectContacts,\r\n  getContacts,\r\n  getFilter,\r\n  getLoading,\r\n};\r\n\r\nexport default selectors;"],"sourceRoot":""}